<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GreaterThanValue" xml:space="preserve">
    <value>{0}: The minimum value {1} must be less than the maximum value {2}</value>
  </data>
  <data name="PresionTuberiaRevestimiento" xml:space="preserve">
    <value>Casing head pressure</value>
  </data>
  <data name="PresionTuberiaProduccion" xml:space="preserve">
    <value>Tubing head pressure</value>
  </data>
  <data name="GreaterThan" xml:space="preserve">
    <value>{0}: The minimum value {1} must be greater than or equal to 0</value>
  </data>
  <data name="Temporizador" xml:space="preserve">
    <value>Timer</value>
  </data>
  <data name="Aviso" xml:space="preserve">
    <value>You must make some changes to update</value>
  </data>
  <data name="ErrorCarta" xml:space="preserve">
    <value>File error.\nNo charge any dynacard.</value>
  </data>
  <data name="PresionLineaDescarga" xml:space="preserve">
    <value>Pressure in discharge line</value>
  </data>
  <data name="TemperaturaSuperficie" xml:space="preserve">
    <value>Surface temperature</value>
  </data>
  <data name="VelocidadMotor" xml:space="preserve">
    <value>Engine speed</value>
  </data>
  <data name="VelocidadUnidadBombeo" xml:space="preserve">
    <value>Pumping unit speed</value>
  </data>
  <data name="EficienciaLlenado" xml:space="preserve">
    <value>Filling efficiency</value>
  </data>
  <data name="SumergenciaEfectivaBomba" xml:space="preserve">
    <value>Effective submergence of the pump</value>
  </data>
  <data name="NivelFluidoPozoTr" xml:space="preserve">
    <value>TR well fluid level</value>
  </data>
  <data name="NivelFluidoPozoTp" xml:space="preserve">
    <value>TP well fluid level</value>
  </data>
  <data name="PresionEntradaBomba" xml:space="preserve">
    <value>Pump inlet pressure</value>
  </data>
  <data name="FrecuenciaOperacionBomba" xml:space="preserve">
    <value>Pump operating frequency</value>
  </data>
  <data name="LongitudCarrera" xml:space="preserve">
    <value>Stroke length</value>
  </data>
  <data name="PresionDisponible" xml:space="preserve">
    <value>Available pressure</value>
  </data>
  <data name="GastoGasInyeccion" xml:space="preserve">
    <value>Injection gas expenditure</value>
  </data>
  <data name="EnvioCorrecto" xml:space="preserve">
    <value>Correct transmission</value>
  </data>
  <data name="EnvioIncorrecto" xml:space="preserve">
    <value>Incorrect transmission</value>
  </data>
  <data name="Envio" xml:space="preserve">
    <value>Sends number</value>
  </data>
  <data name="ProxActualizacion" xml:space="preserve">
    <value>Next update</value>
  </data>
  <data name="GravedadEspecificaGasInyeccion" xml:space="preserve">
    <value>Specific gravity of injection gas</value>
  </data>
  <data name="CartaDinagrafica" xml:space="preserve">
    <value>Dynocard</value>
  </data>
  <data name="Eliminar" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Agregar" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>No charge any dynacard.</value>
  </data>
  <data name="DatosManual" xml:space="preserve">
    <value>Manual data</value>
  </data>
  <data name="OperativeData" xml:space="preserve">
    <value>Operating data</value>
  </data>
  <data name="ProductionData" xml:space="preserve">
    <value>Production data</value>
  </data>
  <data name="SalinidadAgua" xml:space="preserve">
    <value>Water salinity</value>
  </data>
  <data name="GastoAceite" xml:space="preserve">
    <value>Net Oil Production</value>
  </data>
  <data name="GastoAgua" xml:space="preserve">
    <value>Water production</value>
  </data>
  <data name="GastoGas" xml:space="preserve">
    <value>Gas production</value>
  </data>
  <data name="GastoLiquido" xml:space="preserve">
    <value>Gross Production</value>
  </data>
  <data name="GastoLiquidoPruebaProduccion" xml:space="preserve">
    <value>Well Testing Gross Production</value>
  </data>
  <data name="GravedadPetroleo" xml:space="preserve">
    <value>Oil density</value>
  </data>
  <data name="PorcentajeAguaSedimento" xml:space="preserve">
    <value>% BSW</value>
  </data>
  <data name="Emulsion" xml:space="preserve">
    <value>Emulsion</value>
  </data>
  <data name="RelacionGasAceite" xml:space="preserve">
    <value>GOR</value>
  </data>
  <data name="GravedadEspecificaGasProducido" xml:space="preserve">
    <value>Gas produced specific gravity</value>
  </data>
  <data name="CargaSobreBarraPulida" xml:space="preserve">
    <value>Load on polished bar</value>
  </data>
  <data name="TablaHistorico" xml:space="preserve">
    <value>Historical transmission table</value>
  </data>
  <data name="Corriente" xml:space="preserve">
    <value>Power</value>
  </data>
  <data name="DiametroEstrangulador" xml:space="preserve">
    <value>Choker diameter</value>
  </data>
  <data name="GastoInyeccionFluidoPotencia" xml:space="preserve">
    <value>Potential Fluid Injection Spend</value>
  </data>
  <data name="GravedadEspecificaFluidoPotencia" xml:space="preserve">
    <value>Specific Gravity Potential Fluid</value>
  </data>
  <data name="PresionAperturaCampo" xml:space="preserve">
    <value>Opening pressure in the field</value>
  </data>
  <data name="TiempoCiclo" xml:space="preserve">
    <value>Cycle time</value>
  </data>
  <data name="TiempoDesplazamientoTapon" xml:space="preserve">
    <value>Stopper displacement time</value>
  </data>
  <data name="TiempoInyeccion" xml:space="preserve">
    <value>Injection time</value>
  </data>
  <data name="TiempoRecuperacion" xml:space="preserve">
    <value>Recovery Time</value>
  </data>
  <data name="Torque" xml:space="preserve">
    <value>Torque</value>
  </data>
  <data name="VelocidadBomba" xml:space="preserve">
    <value>Pump speed</value>
  </data>
  <data name="DatosOperativosTime" xml:space="preserve">
    <value>Date / Time of transmission</value>
  </data>
  <data name="DatosOperativosResult" xml:space="preserve">
    <value>Send status</value>
  </data>
</root>